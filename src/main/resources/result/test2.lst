Microsoft (R) Macro Assembler Version 6.11		    05/30/25 16:10:00
tempfile.asm						     Page 1 - 1


				; Generated Assembly Code
				; Generated at: 2025-05-30T16:05:02.483378500
				; Compiler: ComplieFX2
				; File: test2.asm
				;
				
				.MODEL SMALL
 0000				.DATA
 0000 0000			    x DW 0    ; int variable (x)
 0002 0000			    t0 DW 0    ; temporary variable (t0)
 0004 0000			    t1 DW 0    ; temporary variable (t1)
				
				    ; 输出相关的字符串和缓冲区
 0006 50 72 6F 67 72 61		    msg_header DB 'Program execution results:', 0Dh, 0Ah, '$'
       6D 20 65 78 65 63
       75 74 69 6F 6E 20
       72 65 73 75 6C 74
       73 3A 0D 0A 24
 0023 3D 3D 3D 3D 3D 3D		    msg_separator DB '=', '=', '=', '=', '=', '=', '=', '=', '=', '=', 0Dh, 0Ah, '$'
       3D 3D 3D 3D 0D 0A
       24
 0030 50 72 6F 67 72 61		    msg_success DB 'Program executed successfully!', 0Dh, 0Ah, '$'
       6D 20 65 78 65 63
       75 74 65 64 20 73
       75 63 63 65 73 73
       66 75 6C 6C 79 21
       0D 0A 24
 0051 20 20 24			    msg_var_prefix DB '  ', '$'
 0054 20 3D 20 24		    msg_equals DB ' = ', '$'
 0058 0D 0A 24			    msg_newline DB 0Dh, 0Ah, '$'
 005B 50 72 65 73 73 20		    msg_press_key DB 'Press any key to exit...', '$'
       61 6E 79 20 6B 65
       79 20 74 6F 20 65
       78 69 74 2E 2E 2E
       24
 0074  0008 [			    number_buffer DB 8 DUP(0), '$'    ; 数字转字符串缓冲区
        00
       ] 24
				.STACK 100h
				
 0000				.CODE
 0000				START:
 0000  B8 ---- R		    MOV AX, @DATA
 0003  8E D8			    MOV DS, AX
				
 0005				MAIN_PROC:
				    ; x = 5
 0005  B8 0005			    MOV AX, 5
 0008  A3 0000 R		    MOV x, AX
				
				    ; t0 = true
 000B  B8 0001			    MOV AX, 1
 000E  A3 0002 R		    MOV t0, AX
				
				    ; 条件跳转: JZ true -> L0
 0011  B8 0001			    MOV AX, 1
 0014  83 F8 00			    CMP AX, 0
 0017  74 0C			    JE L0    ; 为0时跳转
				
				    ; t1 = 15
 0019  B8 000F			    MOV AX, 15
 001C  A3 0004 R		    MOV t1, AX
				
				    ; x = 15
 001F  B8 000F			    MOV AX, 15
 0022  A3 0000 R		    MOV x, AX
				
 0025				L0:
				    ; ===== 输出程序执行结果 =====
 0025  8D 16 0006 R		    LEA DX, msg_header
 0029  B4 09			    MOV AH, 09h
 002B  CD 21			    INT 21h
				
 002D  8D 16 0023 R		    LEA DX, msg_separator
 0031  B4 09			    MOV AH, 09h
 0033  CD 21			    INT 21h
				
 0035  8D 16 0030 R		    LEA DX, msg_success
 0039  B4 09			    MOV AH, 09h
 003B  CD 21			    INT 21h
				
				    ; 输出变量 x
 003D  8D 16 0051 R		    LEA DX, msg_var_prefix
 0041  B4 09			    MOV AH, 09h
 0043  CD 21			    INT 21h
				
				    ; 输出变量名 'x'
 0045  B2 78			    MOV DL, 'x'
 0047  B4 02			    MOV AH, 02h
 0049  CD 21			    INT 21h
 004B  8D 16 0054 R		    LEA DX, msg_equals
 004F  B4 09			    MOV AH, 09h
 0051  CD 21			    INT 21h
				
 0053  A1 0000 R		    MOV AX, x
 0056  E8 0020			    CALL PrintNumber
				
 0059  8D 16 0058 R		    LEA DX, msg_newline
 005D  B4 09			    MOV AH, 09h
 005F  CD 21			    INT 21h
				
 0061  8D 16 0023 R		    LEA DX, msg_separator
 0065  B4 09			    MOV AH, 09h
 0067  CD 21			    INT 21h
				
 0069  8D 16 005B R		    LEA DX, msg_press_key
 006D  B4 09			    MOV AH, 09h
 006F  CD 21			    INT 21h
				
				    ; 等待按键
 0071  B4 01			    MOV AH, 01h
 0073  CD 21			    INT 21h
				
				
 0075  B4 4C			    MOV AH, 4Ch    ; DOS程序结束
 0077  CD 21			    INT 21h
				
				; ===== 辅助函数 =====
				
 0079				PrintNumber PROC
				    ; 输入: AX = 要输出的数字
				    ; 保存寄存器
 0079  53			    PUSH BX
 007A  51			    PUSH CX
 007B  52			    PUSH DX
 007C  56			    PUSH SI
				
				    ; 处理负数
 007D  B9 0000			    MOV CX, 0         ; 数字位数计数器
 0080  BB 000A			    MOV BX, 10        ; 除数
 0083  83 F8 00			    CMP AX, 0
 0086  7D 0A			    JGE PositiveNumber
				
				    ; 输出负号
 0088  50			    PUSH AX
 0089  B2 2D			    MOV DL, '-'
 008B  B4 02			    MOV AH, 02h
 008D  CD 21			    INT 21h
 008F  58			    POP AX
 0090  F7 D8			    NEG AX            ; 转为正数
				
 0092				PositiveNumber:
				    ; 特殊处理0
 0092  83 F8 00			    CMP AX, 0
 0095  75 08			    JNE ConvertLoop
 0097  B2 30			    MOV DL, '0'
 0099  B4 02			    MOV AH, 02h
 009B  CD 21			    INT 21h
 009D  EB 1D			    JMP PrintNumberEnd
				
 009F				ConvertLoop:
				    ; 将数字转换为字符并压栈
 009F  83 F8 00			    CMP AX, 0
 00A2  74 0B			    JE PrintLoop
 00A4  33 D2			    XOR DX, DX        ; 清除高位
 00A6  F7 F3			    DIV BX            ; AX = AX/10, DX = AX%10
 00A8  80 C2 30			    ADD DL, '0'       ; 转换为ASCII
 00AB  52			    PUSH DX           ; 压栈保存
 00AC  41			    INC CX            ; 位数+1
 00AD  EB F0			    JMP ConvertLoop
				
 00AF				PrintLoop:
				    ; 从栈中弹出并输出字符
 00AF  83 F9 00			    CMP CX, 0
 00B2  74 08			    JE PrintNumberEnd
 00B4  5A			    POP DX
 00B5  B4 02			    MOV AH, 02h
 00B7  CD 21			    INT 21h
 00B9  49			    DEC CX
 00BA  EB F3			    JMP PrintLoop
				
 00BC				PrintNumberEnd:
				    ; 恢复寄存器
 00BC  5E			    POP SI
 00BD  5A			    POP DX
 00BE  59			    POP CX
 00BF  5B			    POP BX
 00C0  C3			    RET
 00C1				PrintNumber ENDP
				
				
				END START

Microsoft (R) Macro Assembler Version 6.11		    05/30/25 16:10:00
tempfile.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 007D	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0100	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 00C1	  Word	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

PrintNumber  . . . . . . . . . .	P Near	 0079	  _TEXT	Length= 0048 Public
  PositiveNumber . . . . . . . .	L Near	 0092	  _TEXT	
  ConvertLoop  . . . . . . . . .	L Near	 009F	  _TEXT	
  PrintLoop  . . . . . . . . . .	L Near	 00AF	  _TEXT	
  PrintNumberEnd . . . . . . . .	L Near	 00BC	  _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
L0 . . . . . . . . . . . . . . .	L Near	 0025	  _TEXT	
MAIN_PROC  . . . . . . . . . . .	L Near	 0005	  _TEXT	
START  . . . . . . . . . . . . .	L Near	 0000	  _TEXT	
msg_equals . . . . . . . . . . .	Byte	 0054	  _DATA	
msg_header . . . . . . . . . . .	Byte	 0006	  _DATA	
msg_newline  . . . . . . . . . .	Byte	 0058	  _DATA	
msg_press_key  . . . . . . . . .	Byte	 005B	  _DATA	
msg_separator  . . . . . . . . .	Byte	 0023	  _DATA	
msg_success  . . . . . . . . . .	Byte	 0030	  _DATA	
msg_var_prefix . . . . . . . . .	Byte	 0051	  _DATA	
number_buffer  . . . . . . . . .	Byte	 0074	  _DATA	
t0 . . . . . . . . . . . . . . .	Word	 0002	  _DATA	
t1 . . . . . . . . . . . . . . .	Word	 0004	  _DATA	
x  . . . . . . . . . . . . . . .	Word	 0000	  _DATA	

	   0 Warnings
	   0 Errors
